{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AACb,IAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5B,IAAM,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC;;;;;AAAC,AAKjC,IAAM,MAAM,WAAN,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;;;;;AAAC,AAKzC,IAAM,IAAI,WAAJ,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;AAAC,AAKzC,IAAM,MAAM,WAAN,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;AAAC,AAK3C,IAAM,UAAU,WAAV,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE3D,IAAM,IAAI,GAAG,SAAP,IAAI,CAAI,KAAK;WACf;0CAAI,UAAU;AAAV,sBAAU;;;eACV,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,MAAA,CAAb,OAAO,GAAO,KAAK,SAAK,UAAU,EAAC,CAAC;KAAA;CAAA;;;;AAAC,AAIrD,IAAM,WAAW,WAAX,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACzC,IAAM,aAAa,WAAb,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEjD,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,IAAI,EAAE,KAAK,EAAK;AAC9B,QAAM,QAAQ,GAAG,SAAX,QAAQ,CAAG,CAAC;eAAI,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAAA,CAAC;AAClD,WAAO,UAAC,CAAC,EAAE,IAAI;eACX,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;KAAA,CAAC;CACzC;;;;AAAC,AAIK,IAAM,eAAe,WAAf,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3D,IAAM,iBAAiB,WAAjB,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;;AAAC,AAI5D,IAAM,gBAAgB,WAAhB,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7D,IAAM,kBAAkB,WAAlB,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC","file":"index.js","sourcesContent":["\"use strict\";\nconst pep = require('apep');\nconst pep_sep = require('apep-std-sep');\n\n/**\n    Italicize the result of a generator.\n*/\nexport const italic = pep_sep.between('*', '*');\n\n/**\n    Bold the result of a generator.\n*/\nexport const bold = pep_sep.between('**', '**');\n\n/**\n    Strike through the result of a generator.\n*/\nexport const strike = pep_sep.between('~~', '~~');\n\n/**\n    Output each generator as its own block section.\n*/\nexport const paragraphs = pep_sep.sepBy.bind(null, '\\n\\n');\n\nconst list = (start) =>\n    (...generators) => \n        pep.seq(start, pep_sep.sepBy(start, ...generators));\n\n/**\n*/\nexport const orderedList = list(pep.str('1. '));\nexport const unorderedList = list(pep.str('* '));\n \nconst manyList = (many, start) => {\n    const makeList = x => pep.seq(start, pep.list(x));\n    return (g, prob) =>\n        many(pep.join(g)).chain(makeList);\n};\n\n/**\n*/\nexport const manyOrderedList = manyList(pep.many, pep.str('1. '));\nexport const manyUnorderedList = manyList(pep.many, pep.str('* '));\n\n/**\n*/\nexport const many1OrderedList = manyList(pep.many1, pep.str('1. '));\nexport const many1UnorderedList = manyList(pep.many1, pep.str('* '));"],"sourceRoot":"/source/"}