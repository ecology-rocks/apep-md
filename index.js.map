{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nconst pep = require('apep');\nconst pep_sep = require('apep-std-sep');\n\nconst lineBreak = pep.str('\\n');\n\n/**\n    Headers\n*/\nexport const h1 = pep_sep.between('# ', lineBreak);\nexport const h2 = pep_sep.between('## ', lineBreak);\nexport const h3 = pep_sep.between('### ', lineBreak);\nexport const h4 = pep_sep.between('#### ', lineBreak);\nexport const h5 = pep_sep.between('##### ', lineBreak);\nexport const h6 = pep_sep.between('###### ', lineBreak);\n\n/**\n    Italicize the result of a generator.\n*/\nexport const italic = pep_sep.between('*', '*');\n\n/**\n    Bold the result of a generator.\n*/\nexport const bold = pep_sep.between('**', '**');\n\n/**\n    Strike through the result of a generator.\n*/\nexport const strike = pep_sep.between('~~', '~~');\n\n/**\n    Direct link\n*/\nexport const link = (text, link) =>\n    pep.seq('[', text, '](', link, ')'); \n\n/**\n    Link to a definition.\n*/\nexport const reference = (text, id) =>\n    pep.seq('[', text, '][', id, ']'); \n\n/**\n    Definition of a link\n*/\nexport const linkDefinition = (id, def) =>\n    pep.seq('[', id, ']: ', def); \n\n/**\n    Output each generator as its own block section.\n*/\nexport const paragraphs = pep_sep.sepBy.bind(null, pep.str('\\n\\n'));\n\n/**\n    Output each generator as its own sentence.\n*/\nexport const sentences = pep_sep.sepBy.bind(null, pep.str(' '));\n\n\nconst list = (start) => {\n    const sepInner = pep.seq(lineBreak, start);\n    return (...generators) => \n        pep.seq(\n            start,\n            pep_sep.sepBy(sepInner, ...generators),\n            lineBreak);\n};\n\n/**\n    Put the result of each generator into a list.\n\n    @param ...generators One or more generators.\n*/\nexport const orderedList = list(pep.str('1. '));\nexport const unorderedList = list(pep.str('* '));\n \nconst manyList = (many, start) => {\n    const makeList = x => pep.seq(start, pep.lit(x), lineBreak);\n    return (g, prob) =>\n        many(pep.join(g)).chain(makeList);\n};\n\n/**\n    Run a generator zero or more times, putting results into a list.\n\n    @param g Generator.\n    @param prob See `pep.many`.\n*/\nexport const manyOrderedList = manyList(pep.many, pep.str('1. '));\nexport const manyUnorderedList = manyList(pep.many, pep.str('* '));\n\n/**\n    Run a generator one or more times, putting results into a list.\n\n    @param g Generator.\n    @param prob See `pep.many`.\n*/\nexport const many1OrderedList = manyList(pep.many1, pep.str('1. '));\nexport const many1UnorderedList = manyList(pep.many1, pep.str('* '));"],"sourceRoot":"/source/"}